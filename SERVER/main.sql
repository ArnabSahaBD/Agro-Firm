DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE COW CASCADE CONSTRAINTS;
DROP TABLE GOAT CASCADE CONSTRAINTS;
DROP TABLE CHICKEN CASCADE CONSTRAINTS;
DROP TABLE DUCK CASCADE CONSTRAINTS;
DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE CALC CASCADE CONSTRAINTS;
DROP TABLE REG CASCADE CONSTRAINTS;

CREATE TABLE EMPLOYEE(
	EID NUMBER,
	ENAME VARCHAR(20),
	EAGE NUMBER,	
	PRIMARY KEY(EID));
	
DROP SEQUENCE E_SEQ;
CREATE SEQUENCE E_SEQ START WITH 1001 INCREMENT BY 1 NOMAXVALUE;

CREATE TABLE COW (
	WNUM NUMBER,
	WPRICE NUMBER,
	WWEIGHT NUMBER,
	EID NUMBER,
	PRIMARY KEY(WNUM),
	FOREIGN KEY(EID) REFERENCES EMPLOYEE(EID));
	
DROP SEQUENCE W_SEQ;
CREATE SEQUENCE W_SEQ START WITH 901 INCREMENT BY 1 NOMAXVALUE;

CREATE TABLE GOAT (
	TNUM NUMBER,
	TPRICE NUMBER,
	TWEIGHT NUMBER,
	EID NUMBER,
	PRIMARY KEY(TNUM),
	FOREIGN KEY(EID) REFERENCES EMPLOYEE(EID));
	
DROP SEQUENCE T_SEQ;
CREATE SEQUENCE T_SEQ START WITH 801 INCREMENT BY 1 NOMAXVALUE;
	
CREATE TABLE CHICKEN (
	NCAGE NUMBER,
	NQUANTIY NUMBER,
	NPRICE NUMBER,
	NWEIGHT NUMBER,
	EID NUMBER,
	PRIMARY KEY (NCAGE),
	FOREIGN KEY(EID) REFERENCES EMPLOYEE(EID));
	
DROP SEQUENCE N_SEQ;
CREATE SEQUENCE N_SEQ START WITH 701 INCREMENT BY 1 NOMAXVALUE;
	
CREATE TABLE DUCK (
	KCAGE NUMBER,
	KQUANTIY NUMBER,
	KPRICE NUMBER,
	KWEIGHT NUMBER,
	EID NUMBER,
	PRIMARY KEY(KCAGE),
	FOREIGN KEY(EID) REFERENCES EMPLOYEE(EID));
	
DROP SEQUENCE K_SEQ;
CREATE SEQUENCE K_SEQ START WITH 601 INCREMENT BY 1 NOMAXVALUE;

CREATE TABLE CUSTOMER(
	CNAME VARCHAR(10),
	WNUM NUMBER,
	TNUM NUMBER,
	NCAGE NUMBER,
	KCAGE NUMBER);
	
CREATE TABLE CALC(
	NAME VARCHAR(10),
	WP NUMBER,
	TP NUMBER,
	NP NUMBER,
	KP NUMBER,
	TOTAL NUMBER);	

CREATE TABLE REG(
	ID NUMBER,
	CUS_NAME VARCHAR(10),
	AGE NUMBER,
	ADDRESS VARCHAR(10),
	PRIMARY KEY(ID));
	
	DROP SEQUENCE R_SEQ;
	CREATE SEQUENCE R_SEQ START WITH 20001 INCREMENT BY 1 NOMAXVALUE;
	
INSERT INTO EMPLOYEE(EID,ENAME,EAGE) VALUES (E_SEQ.NEXTVAL,'RAHIM',25);
INSERT INTO EMPLOYEE(EID,ENAME,EAGE) VALUES (E_SEQ.NEXTVAL,'KARIM',28);
INSERT INTO EMPLOYEE(EID,ENAME,EAGE) VALUES (E_SEQ.NEXTVAL,'HASAN',27);
INSERT INTO EMPLOYEE(EID,ENAME,EAGE) VALUES (E_SEQ.NEXTVAL,'MASUD',27);

INSERT INTO COW(WNUM,WPRICE,WWEIGHT,EID) VALUES (W_SEQ.NEXTVAL,80000,800,1001);
INSERT INTO COW(WNUM,WPRICE,WWEIGHT,EID) VALUES (W_SEQ.NEXTVAL,90000,900,1001);
INSERT INTO COW(WNUM,WPRICE,WWEIGHT,EID) VALUES (W_SEQ.NEXTVAL,100000,1000,1001);
INSERT INTO COW(WNUM,WPRICE,WWEIGHT,EID) VALUES (W_SEQ.NEXTVAL,110000,1100,1001);
INSERT INTO COW(WNUM,WPRICE,WWEIGHT,EID) VALUES (W_SEQ.NEXTVAL,120000,1200,1001);
INSERT INTO COW(WNUM,WPRICE,WWEIGHT,EID) VALUES (W_SEQ.NEXTVAL,130000,1300,1001);

INSERT INTO GOAT(TNUM,TPRICE,TWEIGHT,EID) VALUES (T_SEQ.NEXTVAL,10000,20,1002);
INSERT INTO GOAT(TNUM,TPRICE,TWEIGHT,EID) VALUES (T_SEQ.NEXTVAL,15000,25,1002);
INSERT INTO GOAT(TNUM,TPRICE,TWEIGHT,EID) VALUES (T_SEQ.NEXTVAL,20000,30,1002);
INSERT INTO GOAT(TNUM,TPRICE,TWEIGHT,EID) VALUES (T_SEQ.NEXTVAL,30000,35,1002);
INSERT INTO GOAT(TNUM,TPRICE,TWEIGHT,EID) VALUES (T_SEQ.NEXTVAL,25000,38,1002);
INSERT INTO GOAT(TNUM,TPRICE,TWEIGHT,EID) VALUES (T_SEQ.NEXTVAL,38000,40,1002);

INSERT INTO CHICKEN(NCAGE,NQUANTIY,NPRICE,NWEIGHT,EID) VALUES (N_SEQ.NEXTVAL,50,20000,75,1003);
INSERT INTO CHICKEN(NCAGE,NQUANTIY,NPRICE,NWEIGHT,EID) VALUES (N_SEQ.NEXTVAL,55,23650,100,1003);
INSERT INTO CHICKEN(NCAGE,NQUANTIY,NPRICE,NWEIGHT,EID) VALUES (N_SEQ.NEXTVAL,60,18000,60,1004);
INSERT INTO CHICKEN(NCAGE,NQUANTIY,NPRICE,NWEIGHT,EID) VALUES (N_SEQ.NEXTVAL,58,18000,65,1003);
INSERT INTO CHICKEN(NCAGE,NQUANTIY,NPRICE,NWEIGHT,EID) VALUES (N_SEQ.NEXTVAL,45,8000,50,1004);

INSERT INTO DUCK(KCAGE,KQUANTIY,KPRICE,KWEIGHT,EID) VALUES (K_SEQ.NEXTVAL,20,10000,30,1004);
INSERT INTO DUCK(KCAGE,KQUANTIY,KPRICE,KWEIGHT,EID) VALUES (K_SEQ.NEXTVAL,25,20000,50,1004);
INSERT INTO DUCK(KCAGE,KQUANTIY,KPRICE,KWEIGHT,EID) VALUES (K_SEQ.NEXTVAL,30,24000,75,1003);
INSERT INTO DUCK(KCAGE,KQUANTIY,KPRICE,KWEIGHT,EID) VALUES (K_SEQ.NEXTVAL,28,24000,75,1003);
INSERT INTO DUCK(KCAGE,KQUANTIY,KPRICE,KWEIGHT,EID) VALUES (K_SEQ.NEXTVAL,22,15000,35,1004);


SELECT * FROM EMPLOYEE;

SELECT * FROM COW;

SELECT * FROM GOAT;

SELECT * FROM CHICKEN;

SELECT * FROM DUCK;

--SELECT * FROM CUSTOMER;

COMMIT;